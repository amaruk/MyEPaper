---

# Notes:
# This YAML file is modified and commented based on the default ceedling
# project configuration file.
# 
# Amaruk 2017.02.08

:project:
# TRUE: enable CExcpetion
  :use_exceptions: FALSE
# TRUE: enable CMock
  :use_mock: TRUE
# TRUE: support test files with conditional compilation statements 
# (e.g. #ifdef) and header files to be mocked that contain conditional
# preprocessor statements and/or macros.
  :use_test_preprocessor: TRUE
# TRUE: support incremental build with more than three level include
  :use_deep_dependencies: TRUE
  :use_auxiliary_dependencies: TRUE
  :build_root: build
# TRUE: Enable release build
#  :release_build: TRUE
# Test case files' prefix
  :test_file_prefix: test_

#:release_build:
#  :output: MyApp.out
#  :use_assembly: FALSE

:environment:

:extension:
  :executable: .out

:paths:
  :test:
    - +:test/**
    - -:test/support
  :source:
    - ../src/**
  :support:
    - test/support

:defines:
  # in order to add common defines:
  #  1) remove the trailing [] from the :common: section
  #  2) add entries to the :common: section (e.g. :test: has TEST defined)
  :commmon: &common_defines []
  :test:
    - *common_defines
    - TEST
  :test_preprocess:
    - *common_defines
    - TEST

:cmock:
  :mock_prefix: mock_
  :when_no_prototypes: :warn
  :enforce_strict_ordering: TRUE
  :plugins:
    - :ignore
    - :callback
  :treat_as:
    uint8:    HEX8
    uint16:   HEX16
    uint32:   UINT32
    int8:     INT8
    bool:     UINT8

#:tools:
# Ceedling defaults to using gcc for compiling, linking, etc.
# As [:tools] is blank, gcc will be used (so long as it's in your system path)
# See documentation to configure a given toolchain for use

:plugins:
  :load_paths:
    - vendor/ceedling/plugins
  :enabled:
    - stdout_pretty_tests_report
    - module_generator
...
